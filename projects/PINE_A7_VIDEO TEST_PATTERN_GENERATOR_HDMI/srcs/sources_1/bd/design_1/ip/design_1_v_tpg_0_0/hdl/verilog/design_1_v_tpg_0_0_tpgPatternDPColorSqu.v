// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgPatternDPColorSqu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        y,
        x,
        color,
        dpDynamicRange,
        dpYUVCoef,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] y;
input  [15:0] x;
input  [7:0] color;
input  [7:0] dpDynamicRange;
input  [7:0] dpYUVCoef;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] vBarSel_1;
reg   [5:0] yCount_V_4;
reg   [2:0] hBarSel_5_0;
wire   [3:0] DPtpgBarArray_address0;
reg    DPtpgBarArray_ce0;
wire   [2:0] DPtpgBarArray_q0;
wire   [2:0] DPtpgBarSelRgb_VESA_s_address0;
reg    DPtpgBarSelRgb_VESA_s_ce0;
wire   [0:0] DPtpgBarSelRgb_VESA_s_q0;
wire   [2:0] DPtpgBarSelRgb_VESA_2_address0;
reg    DPtpgBarSelRgb_VESA_2_ce0;
wire   [0:0] DPtpgBarSelRgb_VESA_2_q0;
wire   [2:0] DPtpgBarSelRgb_VESA_1_address0;
reg    DPtpgBarSelRgb_VESA_1_ce0;
wire   [0:0] DPtpgBarSelRgb_VESA_1_q0;
wire   [2:0] DPtpgBarSelRgb_CEA_r_address0;
reg    DPtpgBarSelRgb_CEA_r_ce0;
wire   [5:0] DPtpgBarSelRgb_CEA_r_q0;
wire   [2:0] DPtpgBarSelRgb_CEA_g_address0;
reg    DPtpgBarSelRgb_CEA_g_ce0;
wire   [5:0] DPtpgBarSelRgb_CEA_g_q0;
wire   [2:0] DPtpgBarSelRgb_CEA_b_address0;
reg    DPtpgBarSelRgb_CEA_b_ce0;
wire   [5:0] DPtpgBarSelRgb_CEA_b_q0;
wire   [2:0] DPtpgBarSelYuv_601_y_address0;
reg    DPtpgBarSelYuv_601_y_ce0;
wire   [7:0] DPtpgBarSelYuv_601_y_q0;
wire   [2:0] DPtpgBarSelYuv_709_y_address0;
reg    DPtpgBarSelYuv_709_y_ce0;
wire   [7:0] DPtpgBarSelYuv_709_y_q0;
wire   [2:0] DPtpgBarSelYuv_601_u_address0;
reg    DPtpgBarSelYuv_601_u_ce0;
wire   [7:0] DPtpgBarSelYuv_601_u_q0;
wire   [2:0] DPtpgBarSelYuv_601_v_address0;
reg    DPtpgBarSelYuv_601_v_ce0;
wire   [7:0] DPtpgBarSelYuv_601_v_q0;
wire   [2:0] DPtpgBarSelYuv_709_u_address0;
reg    DPtpgBarSelYuv_709_u_ce0;
wire   [7:0] DPtpgBarSelYuv_709_u_q0;
wire   [2:0] DPtpgBarSelYuv_709_v_address0;
reg    DPtpgBarSelYuv_709_v_ce0;
wire   [7:0] DPtpgBarSelYuv_709_v_q0;
reg   [9:0] xCount_V_2_0;
wire   [0:0] xor_ln1664_fu_357_p2;
wire   [0:0] icmp_ln1652_fu_325_p2;
wire   [0:0] and_ln1657_fu_351_p2;
wire   [0:0] icmp_ln1657_fu_345_p2;
wire   [2:0] add_ln1681_fu_441_p2;
wire   [0:0] icmp_ln1669_fu_387_p2;
wire   [0:0] icmp_ln887_2_fu_423_p2;
wire   [0:0] or_ln1701_fu_483_p2;
reg   [0:0] or_ln1701_reg_728;
reg   [0:0] or_ln1701_reg_728_pp0_iter1_reg;
reg   [0:0] or_ln1701_reg_728_pp0_iter2_reg;
reg   [0:0] or_ln1701_reg_728_pp0_iter3_reg;
reg   [0:0] or_ln1701_reg_728_pp0_iter4_reg;
wire   [0:0] icmp_ln1687_fu_495_p2;
wire   [0:0] and_ln1687_fu_507_p2;
wire   [0:0] and_ln1699_fu_519_p2;
reg   [2:0] DPtpgBarArray_load_reg_760;
reg   [5:0] DPtpgBarSelRgb_CEA_r_2_reg_825;
reg   [5:0] DPtpgBarSelRgb_CEA_g_2_reg_830;
reg   [5:0] DPtpgBarSelRgb_CEA_b_2_reg_835;
reg   [7:0] DPtpgBarSelYuv_601_y_2_reg_840;
reg   [7:0] DPtpgBarSelYuv_601_u_2_reg_845;
reg   [7:0] DPtpgBarSelYuv_601_v_2_reg_850;
wire   [7:0] select_ln1687_fu_596_p3;
reg   [7:0] select_ln1687_reg_856;
wire   [7:0] select_ln1699_2_fu_603_p3;
reg   [7:0] select_ln1699_2_reg_861;
wire   [7:0] select_ln1699_5_fu_610_p3;
reg   [7:0] select_ln1699_5_reg_866;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_285;
reg   [0:0] ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285;
wire   [2:0] ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_0_reg_300;
reg   [2:0] ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300;
wire   [63:0] zext_ln1688_fu_545_p1;
wire   [63:0] zext_ln1688_1_fu_550_p1;
wire   [5:0] add_ln700_fu_369_p2;
wire   [9:0] add_ln701_fu_429_p2;
wire   [9:0] add_ln700_2_fu_453_p2;
wire   [15:0] or_ln1652_fu_319_p2;
wire   [0:0] icmp_ln887_fu_339_p2;
wire   [0:0] trunc_ln1684_fu_411_p1;
wire   [0:0] icmp_ln1701_fu_405_p2;
wire   [0:0] xor_ln1701_fu_477_p2;
wire   [7:0] or_ln1687_fu_489_p2;
wire   [0:0] icmp_ln1686_fu_393_p2;
wire   [0:0] icmp_ln1687_1_fu_501_p2;
wire   [0:0] icmp_ln1699_fu_399_p2;
wire   [0:0] xor_ln1686_fu_513_p2;
wire   [3:0] or_ln_fu_525_p3;
wire   [7:0] zext_ln1684_fu_533_p1;
wire   [10:0] tmp_2_fu_537_p3;
wire   [7:0] select_ln300_3_fu_573_p3;
wire   [7:0] select_ln1706_fu_589_p3;
wire   [7:0] select_ln300_fu_565_p3;
wire   [7:0] select_ln300_4_fu_581_p3;
wire  signed [7:0] sext_ln1694_fu_620_p1;
wire   [7:0] select_ln1701_fu_626_p3;
wire   [7:0] select_ln1687_1_fu_631_p3;
wire  signed [7:0] sext_ln1693_fu_617_p1;
wire   [0:0] or_ln1699_fu_650_p2;
wire   [7:0] select_ln1699_1_fu_644_p3;
wire  signed [7:0] sext_ln1695_fu_623_p1;
wire   [7:0] select_ln1699_4_fu_661_p3;
wire   [7:0] select_ln1699_3_fu_654_p3;
wire   [7:0] select_ln1699_fu_637_p3;
wire   [7:0] select_ln1699_6_fu_667_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_64;
reg    ap_condition_191;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 vBarSel_1 = 1'd0;
#0 yCount_V_4 = 6'd0;
#0 hBarSel_5_0 = 3'd0;
#0 xCount_V_2_0 = 10'd0;
end

design_1_v_tpg_0_0_tpgPatternDPColorbkb #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
DPtpgBarArray_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarArray_address0),
    .ce0(DPtpgBarArray_ce0),
    .q0(DPtpgBarArray_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorcud #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_VESA_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_VESA_s_address0),
    .ce0(DPtpgBarSelRgb_VESA_s_ce0),
    .q0(DPtpgBarSelRgb_VESA_s_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColordEe #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_VESA_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_VESA_2_address0),
    .ce0(DPtpgBarSelRgb_VESA_2_ce0),
    .q0(DPtpgBarSelRgb_VESA_2_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColoreOg #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_VESA_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_VESA_1_address0),
    .ce0(DPtpgBarSelRgb_VESA_1_ce0),
    .q0(DPtpgBarSelRgb_VESA_1_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorfYi #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_CEA_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_CEA_r_address0),
    .ce0(DPtpgBarSelRgb_CEA_r_ce0),
    .q0(DPtpgBarSelRgb_CEA_r_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorg8j #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_CEA_g_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_CEA_g_address0),
    .ce0(DPtpgBarSelRgb_CEA_g_ce0),
    .q0(DPtpgBarSelRgb_CEA_g_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorhbi #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelRgb_CEA_b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelRgb_CEA_b_address0),
    .ce0(DPtpgBarSelRgb_CEA_b_ce0),
    .q0(DPtpgBarSelRgb_CEA_b_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColoribs #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_601_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_601_y_address0),
    .ce0(DPtpgBarSelYuv_601_y_ce0),
    .q0(DPtpgBarSelYuv_601_y_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorjbC #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_709_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_709_y_address0),
    .ce0(DPtpgBarSelYuv_709_y_ce0),
    .q0(DPtpgBarSelYuv_709_y_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorkbM #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_601_u_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_601_u_address0),
    .ce0(DPtpgBarSelYuv_601_u_ce0),
    .q0(DPtpgBarSelYuv_601_u_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorlbW #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_601_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_601_v_address0),
    .ce0(DPtpgBarSelYuv_601_v_ce0),
    .q0(DPtpgBarSelYuv_601_v_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColormb6 #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_709_u_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_709_u_address0),
    .ce0(DPtpgBarSelYuv_709_u_ce0),
    .q0(DPtpgBarSelYuv_709_u_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColorncg #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
DPtpgBarSelYuv_709_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DPtpgBarSelYuv_709_v_address0),
    .ce0(DPtpgBarSelYuv_709_v_ce0),
    .q0(DPtpgBarSelYuv_709_v_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_64)) begin
        if (((icmp_ln887_2_fu_423_p2 == 1'd0) & (icmp_ln1669_fu_387_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300 <= add_ln1681_fu_441_p2;
        end else if (((icmp_ln1669_fu_387_p2 == 1'd0) & (icmp_ln887_2_fu_423_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300 <= hBarSel_5_0;
        end else if ((icmp_ln1669_fu_387_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300 <= 3'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300 <= ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_0_reg_300;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1657_fu_351_p2) & (icmp_ln1652_fu_325_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1657_fu_345_p2 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285 <= xor_ln1664_fu_357_p2;
    end else if ((((icmp_ln1652_fu_325_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln1657_fu_351_p2)) | ((icmp_ln1657_fu_345_p2 == 1'd0) & (1'd0 == and_ln1657_fu_351_p2) & (icmp_ln1652_fu_325_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285 <= vBarSel_1;
    end else if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1652_fu_325_p2 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285 <= 1'd0;
    end else if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285 <= ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_64)) begin
        if ((icmp_ln1669_fu_387_p2 == 1'd1)) begin
            hBarSel_5_0 <= 3'd0;
        end else if (((icmp_ln887_2_fu_423_p2 == 1'd0) & (icmp_ln1669_fu_387_p2 == 1'd0))) begin
            hBarSel_5_0 <= add_ln1681_fu_441_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_64)) begin
        if ((icmp_ln1652_fu_325_p2 == 1'd1)) begin
            vBarSel_1 <= 1'd0;
        end else if ((1'b1 == ap_condition_191)) begin
            vBarSel_1 <= xor_ln1664_fu_357_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_64)) begin
        if ((icmp_ln1669_fu_387_p2 == 1'd1)) begin
            xCount_V_2_0 <= 10'd0;
        end else if (((icmp_ln1669_fu_387_p2 == 1'd0) & (icmp_ln887_2_fu_423_p2 == 1'd1))) begin
            xCount_V_2_0 <= add_ln700_2_fu_453_p2;
        end else if (((icmp_ln887_2_fu_423_p2 == 1'd0) & (icmp_ln1669_fu_387_p2 == 1'd0))) begin
            xCount_V_2_0 <= add_ln701_fu_429_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1652_fu_325_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln1657_fu_351_p2))) begin
        yCount_V_4 <= add_ln700_fu_369_p2;
    end else if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1652_fu_325_p2 == 1'd1)) | ((1'd0 == and_ln1657_fu_351_p2) & (icmp_ln1652_fu_325_p2 == 1'd0) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1657_fu_345_p2 == 1'd1)))) begin
        yCount_V_4 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DPtpgBarArray_load_reg_760 <= DPtpgBarArray_q0;
        DPtpgBarSelYuv_601_v_2_reg_850 <= DPtpgBarSelYuv_601_v_q0;
        or_ln1701_reg_728_pp0_iter2_reg <= or_ln1701_reg_728_pp0_iter1_reg;
        or_ln1701_reg_728_pp0_iter3_reg <= or_ln1701_reg_728_pp0_iter2_reg;
        or_ln1701_reg_728_pp0_iter4_reg <= or_ln1701_reg_728_pp0_iter3_reg;
        select_ln1699_2_reg_861 <= select_ln1699_2_fu_603_p3;
        select_ln1699_5_reg_866 <= select_ln1699_5_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1699_fu_519_p2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DPtpgBarSelRgb_CEA_b_2_reg_835 <= DPtpgBarSelRgb_CEA_b_q0;
        DPtpgBarSelRgb_CEA_r_2_reg_825 <= DPtpgBarSelRgb_CEA_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1699_fu_519_p2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln1687_fu_507_p2))) begin
        DPtpgBarSelRgb_CEA_g_2_reg_830 <= DPtpgBarSelRgb_CEA_g_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln1699_fu_519_p2) & (or_ln1701_reg_728_pp0_iter3_reg == 1'd1))) begin
        DPtpgBarSelYuv_601_u_2_reg_845 <= DPtpgBarSelYuv_601_u_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln1699_fu_519_p2))) begin
        DPtpgBarSelYuv_601_y_2_reg_840 <= DPtpgBarSelYuv_601_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln1701_reg_728 <= or_ln1701_fu_483_p2;
        or_ln1701_reg_728_pp0_iter1_reg <= or_ln1701_reg_728;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln1699_fu_519_p2) & (1'd0 == and_ln1687_fu_507_p2) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1687_reg_856 <= select_ln1687_fu_596_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        DPtpgBarArray_ce0 = 1'b1;
    end else begin
        DPtpgBarArray_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_CEA_b_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_CEA_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_CEA_g_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_CEA_g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_CEA_r_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_CEA_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_VESA_1_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_VESA_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_VESA_2_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_VESA_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelRgb_VESA_s_ce0 = 1'b1;
    end else begin
        DPtpgBarSelRgb_VESA_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_601_u_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_601_u_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_601_v_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_601_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_601_y_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_601_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_709_u_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_709_u_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_709_v_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_709_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        DPtpgBarSelYuv_709_y_ce0 = 1'b1;
    end else begin
        DPtpgBarSelYuv_709_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DPtpgBarArray_address0 = zext_ln1688_fu_545_p1;

assign DPtpgBarSelRgb_CEA_b_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelRgb_CEA_g_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelRgb_CEA_r_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelRgb_VESA_1_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelRgb_VESA_2_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelRgb_VESA_s_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_601_u_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_601_v_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_601_y_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_709_u_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_709_v_address0 = zext_ln1688_1_fu_550_p1;

assign DPtpgBarSelYuv_709_y_address0 = zext_ln1688_1_fu_550_p1;

assign add_ln1681_fu_441_p2 = (hBarSel_5_0 + 3'd1);

assign add_ln700_2_fu_453_p2 = (xCount_V_2_0 + 10'd1);

assign add_ln700_fu_369_p2 = (yCount_V_4 + 6'd1);

assign add_ln701_fu_429_p2 = ($signed(xCount_V_2_0) + $signed(10'd961));

assign and_ln1657_fu_351_p2 = (icmp_ln887_fu_339_p2 & icmp_ln1657_fu_345_p2);

assign and_ln1687_fu_507_p2 = (icmp_ln1687_1_fu_501_p2 & icmp_ln1686_fu_393_p2);

assign and_ln1699_fu_519_p2 = (xor_ln1686_fu_513_p2 & icmp_ln1699_fu_399_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_191 = ((1'd0 == and_ln1657_fu_351_p2) & (icmp_ln1652_fu_325_p2 == 1'd0) & (icmp_ln1657_fu_345_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_64 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_0_reg_300 = 'bx;

assign ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_285 = 'bx;

assign ap_return_0 = select_ln1699_3_fu_654_p3;

assign ap_return_1 = select_ln1699_fu_637_p3;

assign ap_return_2 = select_ln1699_6_fu_667_p3;

assign icmp_ln1652_fu_325_p2 = ((or_ln1652_fu_319_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1657_fu_345_p2 = ((x == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1669_fu_387_p2 = ((x == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1686_fu_393_p2 = ((color == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1687_1_fu_501_p2 = ((dpDynamicRange != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1687_fu_495_p2 = ((or_ln1687_fu_489_p2 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1699_fu_399_p2 = ((dpYUVCoef == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1701_fu_405_p2 = ((color == 8'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_423_p2 = ((xCount_V_2_0 < 10'd63) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_339_p2 = ((yCount_V_4 != 6'd63) ? 1'b1 : 1'b0);

assign or_ln1652_fu_319_p2 = (y | x);

assign or_ln1687_fu_489_p2 = (dpDynamicRange | color);

assign or_ln1699_fu_650_p2 = (and_ln1699_fu_519_p2 | and_ln1687_fu_507_p2);

assign or_ln1701_fu_483_p2 = (xor_ln1701_fu_477_p2 | icmp_ln1701_fu_405_p2);

assign or_ln_fu_525_p3 = {{ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_285}, {ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_0_reg_300}};

assign select_ln1687_1_fu_631_p3 = ((and_ln1687_fu_507_p2[0:0] === 1'b1) ? sext_ln1694_fu_620_p1 : select_ln1687_reg_856);

assign select_ln1687_fu_596_p3 = ((icmp_ln1687_fu_495_p2[0:0] === 1'b1) ? select_ln300_3_fu_573_p3 : select_ln1706_fu_589_p3);

assign select_ln1699_1_fu_644_p3 = ((and_ln1699_fu_519_p2[0:0] === 1'b1) ? DPtpgBarSelYuv_601_y_2_reg_840 : sext_ln1693_fu_617_p1);

assign select_ln1699_2_fu_603_p3 = ((icmp_ln1687_fu_495_p2[0:0] === 1'b1) ? select_ln300_fu_565_p3 : DPtpgBarSelYuv_709_y_q0);

assign select_ln1699_3_fu_654_p3 = ((or_ln1699_fu_650_p2[0:0] === 1'b1) ? select_ln1699_1_fu_644_p3 : select_ln1699_2_reg_861);

assign select_ln1699_4_fu_661_p3 = ((and_ln1699_fu_519_p2[0:0] === 1'b1) ? DPtpgBarSelYuv_601_v_2_reg_850 : sext_ln1695_fu_623_p1);

assign select_ln1699_5_fu_610_p3 = ((icmp_ln1687_fu_495_p2[0:0] === 1'b1) ? select_ln300_4_fu_581_p3 : DPtpgBarSelYuv_709_v_q0);

assign select_ln1699_6_fu_667_p3 = ((or_ln1699_fu_650_p2[0:0] === 1'b1) ? select_ln1699_4_fu_661_p3 : select_ln1699_5_reg_866);

assign select_ln1699_fu_637_p3 = ((and_ln1699_fu_519_p2[0:0] === 1'b1) ? select_ln1701_fu_626_p3 : select_ln1687_1_fu_631_p3);

assign select_ln1701_fu_626_p3 = ((or_ln1701_reg_728_pp0_iter4_reg[0:0] === 1'b1) ? DPtpgBarSelYuv_601_u_2_reg_845 : DPtpgBarSelYuv_601_v_2_reg_850);

assign select_ln1706_fu_589_p3 = ((or_ln1701_reg_728_pp0_iter3_reg[0:0] === 1'b1) ? DPtpgBarSelYuv_709_u_q0 : DPtpgBarSelYuv_709_v_q0);

assign select_ln300_3_fu_573_p3 = ((DPtpgBarSelRgb_VESA_2_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln300_4_fu_581_p3 = ((DPtpgBarSelRgb_VESA_1_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln300_fu_565_p3 = ((DPtpgBarSelRgb_VESA_s_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign sext_ln1693_fu_617_p1 = $signed(DPtpgBarSelRgb_CEA_r_2_reg_825);

assign sext_ln1694_fu_620_p1 = $signed(DPtpgBarSelRgb_CEA_g_2_reg_830);

assign sext_ln1695_fu_623_p1 = $signed(DPtpgBarSelRgb_CEA_b_2_reg_835);

assign tmp_2_fu_537_p3 = {{3'd0}, {zext_ln1684_fu_533_p1}};

assign trunc_ln1684_fu_411_p1 = x[0:0];

assign xor_ln1664_fu_357_p2 = (vBarSel_1 ^ 1'd1);

assign xor_ln1686_fu_513_p2 = (icmp_ln1686_fu_393_p2 ^ 1'd1);

assign xor_ln1701_fu_477_p2 = (trunc_ln1684_fu_411_p1 ^ 1'd1);

assign zext_ln1684_fu_533_p1 = or_ln_fu_525_p3;

assign zext_ln1688_1_fu_550_p1 = DPtpgBarArray_load_reg_760;

assign zext_ln1688_fu_545_p1 = tmp_2_fu_537_p3;

endmodule //design_1_v_tpg_0_0_tpgPatternDPColorSqu
