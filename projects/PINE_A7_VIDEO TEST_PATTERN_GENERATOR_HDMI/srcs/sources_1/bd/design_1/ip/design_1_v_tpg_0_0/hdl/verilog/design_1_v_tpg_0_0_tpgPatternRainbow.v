// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgPatternRainbow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x,
        color,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] x;
input  [7:0] color;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] tpgSinTableArray_9bi_address0;
reg    tpgSinTableArray_9bi_ce0;
wire   [8:0] tpgSinTableArray_9bi_q0;
wire   [10:0] tpgSinTableArray_9bi_address1;
reg    tpgSinTableArray_9bi_ce1;
wire   [8:0] tpgSinTableArray_9bi_q1;
wire   [10:0] tpgSinTableArray_9bi_address2;
reg    tpgSinTableArray_9bi_ce2;
wire   [8:0] tpgSinTableArray_9bi_q2;
reg   [15:0] x_read_reg_602;
reg   [15:0] x_read_reg_602_pp0_iter1_reg;
reg   [15:0] x_read_reg_602_pp0_iter2_reg;
reg   [15:0] x_read_reg_602_pp0_iter3_reg;
reg   [15:0] x_read_reg_602_pp0_iter4_reg;
reg   [15:0] x_read_reg_602_pp0_iter5_reg;
reg   [15:0] x_read_reg_602_pp0_iter6_reg;
reg   [15:0] x_read_reg_602_pp0_iter7_reg;
wire   [0:0] icmp_ln1227_fu_125_p2;
wire   [0:0] icmp_ln1260_fu_141_p2;
wire   [10:0] trunc_ln1223_fu_147_p1;
reg   [10:0] trunc_ln1223_reg_620;
wire   [10:0] add_ln1224_fu_151_p2;
reg   [10:0] add_ln1224_reg_626;
wire   [10:0] add_ln1225_fu_165_p2;
reg   [10:0] add_ln1225_reg_641;
reg   [8:0] tpgSinTableArray_9bi_2_reg_646;
reg   [8:0] tpgSinTableArray_9bi_4_reg_652;
wire   [7:0] select_ln1223_fu_196_p3;
reg   [7:0] select_ln1223_reg_663;
reg   [7:0] select_ln1223_reg_663_pp0_iter4_reg;
reg   [7:0] select_ln1223_reg_663_pp0_iter5_reg;
reg   [7:0] select_ln1223_reg_663_pp0_iter6_reg;
reg   [7:0] select_ln1223_reg_663_pp0_iter7_reg;
wire   [7:0] select_ln1224_fu_226_p3;
reg   [7:0] select_ln1224_reg_669;
reg   [7:0] select_ln1224_reg_669_pp0_iter4_reg;
reg   [7:0] select_ln1224_reg_669_pp0_iter5_reg;
reg   [7:0] select_ln1224_reg_669_pp0_iter6_reg;
reg   [7:0] select_ln1224_reg_669_pp0_iter7_reg;
reg   [8:0] tpgSinTableArray_9bi_6_reg_674;
wire   [14:0] zext_ln1237_fu_234_p1;
reg   [14:0] zext_ln1237_reg_680;
wire   [15:0] zext_ln1237_1_fu_238_p1;
reg   [15:0] zext_ln1237_1_reg_686;
reg   [15:0] zext_ln1237_1_reg_686_pp0_iter4_reg;
wire   [7:0] select_ln1225_fu_264_p3;
reg   [7:0] select_ln1225_reg_693;
reg   [7:0] select_ln1225_reg_693_pp0_iter5_reg;
reg   [7:0] select_ln1225_reg_693_pp0_iter6_reg;
reg   [7:0] select_ln1225_reg_693_pp0_iter7_reg;
wire   [13:0] zext_ln1237_2_fu_272_p1;
reg   [13:0] zext_ln1237_2_reg_699;
wire   [14:0] grp_fu_557_p3;
reg   [14:0] add_ln1237_reg_705;
wire  signed [15:0] grp_fu_565_p3;
reg  signed [15:0] add_ln1238_reg_710;
wire   [15:0] mul_ln1239_fu_276_p2;
reg   [15:0] mul_ln1239_reg_715;
wire   [15:0] grp_fu_573_p3;
reg   [15:0] add_ln1237_1_reg_720;
wire  signed [15:0] grp_fu_580_p3;
reg  signed [15:0] add_ln1238_1_reg_725;
wire  signed [15:0] grp_fu_586_p3;
reg  signed [15:0] add_ln1239_reg_730;
wire   [16:0] grp_fu_593_p3;
reg   [16:0] add_ln1237_2_reg_735;
reg   [8:0] trunc_ln6_reg_740;
wire   [16:0] add_ln1239_2_fu_346_p2;
reg   [16:0] add_ln1239_2_reg_745;
reg   [8:0] trunc_ln8_reg_751;
reg   [0:0] tmp_5_reg_756;
wire   [7:0] select_ln1241_1_fu_399_p3;
reg   [7:0] select_ln1241_1_reg_762;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln1223_fu_157_p1;
wire   [63:0] zext_ln1224_fu_161_p1;
wire   [63:0] zext_ln1225_fu_170_p1;
wire   [6:0] tmp_fu_131_p4;
wire   [7:0] trunc_ln1223_1_fu_174_p1;
wire   [8:0] add_ln1223_fu_177_p2;
wire   [0:0] tmp_2_fu_188_p3;
wire   [7:0] xor_ln1223_fu_182_p2;
wire   [7:0] trunc_ln1224_fu_204_p1;
wire   [8:0] add_ln1224_1_fu_207_p2;
wire   [0:0] tmp_3_fu_218_p3;
wire   [7:0] xor_ln1224_fu_212_p2;
wire   [7:0] trunc_ln1225_fu_242_p1;
wire   [8:0] add_ln1225_1_fu_245_p2;
wire   [0:0] tmp_4_fu_256_p3;
wire   [7:0] xor_ln1225_fu_250_p2;
wire   [7:0] mul_ln1239_fu_276_p1;
wire   [14:0] shl_ln_fu_296_p3;
wire   [16:0] zext_ln1238_1_fu_307_p1;
wire   [16:0] zext_ln1238_fu_303_p1;
wire   [16:0] add_ln1238_2_fu_310_p2;
wire   [14:0] shl_ln1_fu_326_p3;
wire   [16:0] zext_ln1239_fu_333_p1;
wire  signed [16:0] sext_ln1239_1_fu_337_p1;
wire   [16:0] add_ln1239_1_fu_340_p2;
wire   [8:0] trunc_ln7_fu_316_p4;
wire   [0:0] icmp_ln1241_fu_369_p2;
wire   [0:0] icmp_ln1241_1_fu_383_p2;
wire   [7:0] select_ln1241_fu_375_p3;
wire   [7:0] trunc_ln9_fu_389_p4;
wire   [0:0] icmp_ln1240_fu_407_p2;
wire   [7:0] trunc_ln1240_1_fu_417_p4;
wire   [0:0] or_ln1240_fu_412_p2;
wire   [7:0] select_ln1240_fu_426_p3;
wire   [0:0] tmp_6_fu_446_p3;
wire   [7:0] trunc_ln_fu_453_p4;
wire   [7:0] select_ln1240_1_fu_433_p3;
wire   [0:0] icmp_ln1242_fu_441_p2;
wire   [0:0] xor_ln1227_fu_476_p2;
wire   [0:0] and_ln1242_fu_481_p2;
wire   [7:0] select_ln1227_fu_470_p3;
wire   [7:0] select_ln1227_1_fu_495_p3;
wire   [7:0] select_ln1242_fu_462_p3;
wire   [7:0] select_ln1227_2_fu_507_p3;
wire   [0:0] trunc_ln1260_fu_521_p1;
wire   [7:0] select_ln1242_3_fu_513_p3;
wire   [7:0] select_ln1242_2_fu_500_p3;
wire   [7:0] empty_fu_524_p3;
wire   [7:0] select_ln1242_1_fu_487_p3;
wire   [7:0] select_ln1260_fu_532_p3;
wire   [7:0] grp_fu_557_p0;
wire   [7:0] grp_fu_557_p1;
wire   [13:0] grp_fu_557_p2;
wire  signed [7:0] grp_fu_565_p0;
wire   [7:0] grp_fu_565_p1;
wire   [8:0] grp_fu_573_p0;
wire   [7:0] grp_fu_573_p1;
wire   [14:0] grp_fu_573_p2;
wire  signed [6:0] grp_fu_580_p0;
wire   [7:0] grp_fu_580_p1;
wire  signed [5:0] grp_fu_586_p0;
wire   [7:0] grp_fu_586_p1;
wire   [5:0] grp_fu_593_p0;
wire   [7:0] grp_fu_593_p1;
wire   [15:0] grp_fu_593_p2;
reg    grp_fu_557_ce;
reg    grp_fu_565_ce;
reg    grp_fu_573_ce;
reg    grp_fu_580_ce;
reg    grp_fu_586_ce;
reg    grp_fu_593_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to7;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [14:0] grp_fu_557_p10;
wire   [15:0] grp_fu_565_p10;
wire   [15:0] grp_fu_573_p20;
wire   [13:0] grp_fu_586_p10;
wire   [16:0] grp_fu_593_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

design_1_v_tpg_0_0_tpgPatternRainbowvdy #(
    .DataWidth( 9 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
tpgSinTableArray_9bi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgSinTableArray_9bi_address0),
    .ce0(tpgSinTableArray_9bi_ce0),
    .q0(tpgSinTableArray_9bi_q0),
    .address1(tpgSinTableArray_9bi_address1),
    .ce1(tpgSinTableArray_9bi_ce1),
    .q1(tpgSinTableArray_9bi_q1),
    .address2(tpgSinTableArray_9bi_address2),
    .ce2(tpgSinTableArray_9bi_ce2),
    .q2(tpgSinTableArray_9bi_q2)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_wdI #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 15 ))
v_tpg_mac_muladd_wdI_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_557_p0),
    .din1(grp_fu_557_p1),
    .din2(grp_fu_557_p2),
    .ce(grp_fu_557_ce),
    .dout(grp_fu_557_p3)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_xdS #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_xdS_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .din2(16'd32896),
    .ce(grp_fu_565_ce),
    .dout(grp_fu_565_p3)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_yd2 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_yd2_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_573_p0),
    .din1(grp_fu_573_p1),
    .din2(grp_fu_573_p2),
    .ce(grp_fu_573_ce),
    .dout(grp_fu_573_p3)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_zec #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_zec_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_580_p0),
    .din1(grp_fu_580_p1),
    .din2(add_ln1238_reg_710),
    .ce(grp_fu_580_ce),
    .dout(grp_fu_580_p3)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_Aem_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_586_p0),
    .din1(grp_fu_586_p1),
    .din2(mul_ln1239_reg_715),
    .ce(grp_fu_586_ce),
    .dout(grp_fu_586_p3)
);

design_1_v_tpg_0_0_v_tpg_mac_muladd_Bew #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
v_tpg_mac_muladd_Bew_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_593_p0),
    .din1(grp_fu_593_p1),
    .din2(grp_fu_593_p2),
    .ce(grp_fu_593_ce),
    .dout(grp_fu_593_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1224_reg_626 <= add_ln1224_fu_151_p2;
        add_ln1225_reg_641 <= add_ln1225_fu_165_p2;
        trunc_ln1223_reg_620 <= trunc_ln1223_fu_147_p1;
        x_read_reg_602 <= x;
        x_read_reg_602_pp0_iter1_reg <= x_read_reg_602;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        add_ln1237_1_reg_720 <= grp_fu_573_p3;
        add_ln1238_1_reg_725 <= grp_fu_580_p3;
        add_ln1239_reg_730 <= grp_fu_586_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        add_ln1237_2_reg_735 <= grp_fu_593_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        add_ln1237_reg_705 <= grp_fu_557_p3;
        add_ln1238_reg_710 <= grp_fu_565_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1239_2_reg_745 <= add_ln1239_2_fu_346_p2;
        mul_ln1239_reg_715 <= mul_ln1239_fu_276_p2;
        select_ln1223_reg_663 <= select_ln1223_fu_196_p3;
        select_ln1223_reg_663_pp0_iter4_reg <= select_ln1223_reg_663;
        select_ln1223_reg_663_pp0_iter5_reg <= select_ln1223_reg_663_pp0_iter4_reg;
        select_ln1223_reg_663_pp0_iter6_reg <= select_ln1223_reg_663_pp0_iter5_reg;
        select_ln1223_reg_663_pp0_iter7_reg <= select_ln1223_reg_663_pp0_iter6_reg;
        select_ln1224_reg_669 <= select_ln1224_fu_226_p3;
        select_ln1224_reg_669_pp0_iter4_reg <= select_ln1224_reg_669;
        select_ln1224_reg_669_pp0_iter5_reg <= select_ln1224_reg_669_pp0_iter4_reg;
        select_ln1224_reg_669_pp0_iter6_reg <= select_ln1224_reg_669_pp0_iter5_reg;
        select_ln1224_reg_669_pp0_iter7_reg <= select_ln1224_reg_669_pp0_iter6_reg;
        select_ln1225_reg_693 <= select_ln1225_fu_264_p3;
        select_ln1225_reg_693_pp0_iter5_reg <= select_ln1225_reg_693;
        select_ln1225_reg_693_pp0_iter6_reg <= select_ln1225_reg_693_pp0_iter5_reg;
        select_ln1225_reg_693_pp0_iter7_reg <= select_ln1225_reg_693_pp0_iter6_reg;
        select_ln1241_1_reg_762 <= select_ln1241_1_fu_399_p3;
        tmp_5_reg_756 <= grp_fu_593_p3[32'd16];
        trunc_ln6_reg_740 <= {{grp_fu_593_p3[16:8]}};
        trunc_ln8_reg_751 <= {{add_ln1239_2_fu_346_p2[16:8]}};
        x_read_reg_602_pp0_iter2_reg <= x_read_reg_602_pp0_iter1_reg;
        x_read_reg_602_pp0_iter3_reg <= x_read_reg_602_pp0_iter2_reg;
        x_read_reg_602_pp0_iter4_reg <= x_read_reg_602_pp0_iter3_reg;
        x_read_reg_602_pp0_iter5_reg <= x_read_reg_602_pp0_iter4_reg;
        x_read_reg_602_pp0_iter6_reg <= x_read_reg_602_pp0_iter5_reg;
        x_read_reg_602_pp0_iter7_reg <= x_read_reg_602_pp0_iter6_reg;
        zext_ln1237_1_reg_686[7 : 0] <= zext_ln1237_1_fu_238_p1[7 : 0];
        zext_ln1237_1_reg_686_pp0_iter4_reg[7 : 0] <= zext_ln1237_1_reg_686[7 : 0];
        zext_ln1237_2_reg_699[7 : 0] <= zext_ln1237_2_fu_272_p1[7 : 0];
        zext_ln1237_reg_680[7 : 0] <= zext_ln1237_fu_234_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tpgSinTableArray_9bi_2_reg_646 <= tpgSinTableArray_9bi_q0;
        tpgSinTableArray_9bi_4_reg_652 <= tpgSinTableArray_9bi_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        tpgSinTableArray_9bi_6_reg_674 <= tpgSinTableArray_9bi_q2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to7 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_557_ce = 1'b1;
    end else begin
        grp_fu_557_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_565_ce = 1'b1;
    end else begin
        grp_fu_565_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_573_ce = 1'b1;
    end else begin
        grp_fu_573_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_580_ce = 1'b1;
    end else begin
        grp_fu_580_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_586_ce = 1'b1;
    end else begin
        grp_fu_586_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_593_ce = 1'b1;
    end else begin
        grp_fu_593_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce0 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce1 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tpgSinTableArray_9bi_ce2 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce2 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1223_fu_177_p2 = (9'd128 + tpgSinTableArray_9bi_2_reg_646);

assign add_ln1224_1_fu_207_p2 = (9'd128 + tpgSinTableArray_9bi_4_reg_652);

assign add_ln1224_fu_151_p2 = (11'd682 + trunc_ln1223_fu_147_p1);

assign add_ln1225_1_fu_245_p2 = (9'd128 + tpgSinTableArray_9bi_6_reg_674);

assign add_ln1225_fu_165_p2 = ($signed(11'd1364) + $signed(trunc_ln1223_reg_620));

assign add_ln1238_2_fu_310_p2 = (zext_ln1238_1_fu_307_p1 + zext_ln1238_fu_303_p1);

assign add_ln1239_1_fu_340_p2 = (17'd32896 + zext_ln1239_fu_333_p1);

assign add_ln1239_2_fu_346_p2 = ($signed(sext_ln1239_1_fu_337_p1) + $signed(add_ln1239_1_fu_340_p2));

assign and_ln1242_fu_481_p2 = (xor_ln1227_fu_476_p2 & icmp_ln1242_fu_441_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = select_ln1242_1_fu_487_p3;

assign ap_return_1 = select_ln1260_fu_532_p3;

assign ap_return_2 = select_ln1242_3_fu_513_p3;

assign empty_fu_524_p3 = ((trunc_ln1260_fu_521_p1[0:0] === 1'b1) ? select_ln1242_3_fu_513_p3 : select_ln1242_2_fu_500_p3);

assign grp_fu_557_p0 = 15'd77;

assign grp_fu_557_p1 = grp_fu_557_p10;

assign grp_fu_557_p10 = select_ln1223_fu_196_p3;

assign grp_fu_557_p2 = 15'd4224;

assign grp_fu_565_p0 = 16'd65451;

assign grp_fu_565_p1 = grp_fu_565_p10;

assign grp_fu_565_p10 = select_ln1224_fu_226_p3;

assign grp_fu_573_p0 = 16'd150;

assign grp_fu_573_p1 = zext_ln1237_1_reg_686;

assign grp_fu_573_p2 = grp_fu_573_p20;

assign grp_fu_573_p20 = add_ln1237_reg_705;

assign grp_fu_580_p0 = 15'd32725;

assign grp_fu_580_p1 = zext_ln1237_reg_680;

assign grp_fu_586_p0 = 14'd16363;

assign grp_fu_586_p1 = grp_fu_586_p10;

assign grp_fu_586_p10 = select_ln1225_fu_264_p3;

assign grp_fu_593_p0 = 14'd29;

assign grp_fu_593_p1 = zext_ln1237_2_reg_699;

assign grp_fu_593_p2 = grp_fu_593_p20;

assign grp_fu_593_p20 = add_ln1237_1_reg_720;

assign icmp_ln1227_fu_125_p2 = ((color == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1240_fu_407_p2 = ((trunc_ln6_reg_740 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1241_1_fu_383_p2 = (($signed(trunc_ln7_fu_316_p4) < $signed(9'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1241_fu_369_p2 = ((trunc_ln7_fu_316_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1242_fu_441_p2 = ((trunc_ln8_reg_751 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1260_fu_141_p2 = ((tmp_fu_131_p4 == 7'd0) ? 1'b1 : 1'b0);

assign mul_ln1239_fu_276_p1 = zext_ln1237_1_reg_686_pp0_iter4_reg;

assign mul_ln1239_fu_276_p2 = ($signed(16'd65429) * $signed({{1'b0}, {mul_ln1239_fu_276_p1}}));

assign or_ln1240_fu_412_p2 = (tmp_5_reg_756 | icmp_ln1240_fu_407_p2);

assign select_ln1223_fu_196_p3 = ((tmp_2_fu_188_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1223_fu_182_p2);

assign select_ln1224_fu_226_p3 = ((tmp_3_fu_218_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1224_fu_212_p2);

assign select_ln1225_fu_264_p3 = ((tmp_4_fu_256_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1225_fu_250_p2);

assign select_ln1227_1_fu_495_p3 = ((icmp_ln1227_fu_125_p2[0:0] === 1'b1) ? select_ln1224_reg_669_pp0_iter7_reg : select_ln1241_1_reg_762);

assign select_ln1227_2_fu_507_p3 = ((icmp_ln1227_fu_125_p2[0:0] === 1'b1) ? select_ln1225_reg_693_pp0_iter7_reg : select_ln1242_fu_462_p3);

assign select_ln1227_fu_470_p3 = ((icmp_ln1227_fu_125_p2[0:0] === 1'b1) ? select_ln1223_reg_663_pp0_iter7_reg : select_ln1240_1_fu_433_p3);

assign select_ln1240_1_fu_433_p3 = ((or_ln1240_fu_412_p2[0:0] === 1'b1) ? select_ln1240_fu_426_p3 : 8'd0);

assign select_ln1240_fu_426_p3 = ((tmp_5_reg_756[0:0] === 1'b1) ? 8'd255 : trunc_ln1240_1_fu_417_p4);

assign select_ln1241_1_fu_399_p3 = ((icmp_ln1241_1_fu_383_p2[0:0] === 1'b1) ? select_ln1241_fu_375_p3 : trunc_ln9_fu_389_p4);

assign select_ln1241_fu_375_p3 = ((icmp_ln1241_fu_369_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln1242_1_fu_487_p3 = ((and_ln1242_fu_481_p2[0:0] === 1'b1) ? select_ln1240_1_fu_433_p3 : select_ln1227_fu_470_p3);

assign select_ln1242_2_fu_500_p3 = ((and_ln1242_fu_481_p2[0:0] === 1'b1) ? select_ln1241_1_reg_762 : select_ln1227_1_fu_495_p3);

assign select_ln1242_3_fu_513_p3 = ((and_ln1242_fu_481_p2[0:0] === 1'b1) ? 8'd0 : select_ln1227_2_fu_507_p3);

assign select_ln1242_fu_462_p3 = ((tmp_6_fu_446_p3[0:0] === 1'b1) ? 8'd255 : trunc_ln_fu_453_p4);

assign select_ln1260_fu_532_p3 = ((icmp_ln1260_fu_141_p2[0:0] === 1'b1) ? select_ln1242_2_fu_500_p3 : empty_fu_524_p3);

assign sext_ln1239_1_fu_337_p1 = add_ln1239_reg_730;

assign shl_ln1_fu_326_p3 = {{select_ln1223_reg_663_pp0_iter6_reg}, {7'd0}};

assign shl_ln_fu_296_p3 = {{select_ln1225_reg_693_pp0_iter6_reg}, {7'd0}};

assign tmp_2_fu_188_p3 = add_ln1223_fu_177_p2[32'd8];

assign tmp_3_fu_218_p3 = add_ln1224_1_fu_207_p2[32'd8];

assign tmp_4_fu_256_p3 = add_ln1225_1_fu_245_p2[32'd8];

assign tmp_6_fu_446_p3 = add_ln1239_2_reg_745[32'd16];

assign tmp_fu_131_p4 = {{color[7:1]}};

assign tpgSinTableArray_9bi_address0 = zext_ln1223_fu_157_p1;

assign tpgSinTableArray_9bi_address1 = zext_ln1224_fu_161_p1;

assign tpgSinTableArray_9bi_address2 = zext_ln1225_fu_170_p1;

assign trunc_ln1223_1_fu_174_p1 = tpgSinTableArray_9bi_2_reg_646[7:0];

assign trunc_ln1223_fu_147_p1 = x[10:0];

assign trunc_ln1224_fu_204_p1 = tpgSinTableArray_9bi_4_reg_652[7:0];

assign trunc_ln1225_fu_242_p1 = tpgSinTableArray_9bi_6_reg_674[7:0];

assign trunc_ln1240_1_fu_417_p4 = {{add_ln1237_2_reg_735[15:8]}};

assign trunc_ln1260_fu_521_p1 = x_read_reg_602_pp0_iter7_reg[0:0];

assign trunc_ln7_fu_316_p4 = {{add_ln1238_2_fu_310_p2[16:8]}};

assign trunc_ln9_fu_389_p4 = {{add_ln1238_2_fu_310_p2[15:8]}};

assign trunc_ln_fu_453_p4 = {{add_ln1239_2_reg_745[15:8]}};

assign xor_ln1223_fu_182_p2 = (trunc_ln1223_1_fu_174_p1 ^ 8'd128);

assign xor_ln1224_fu_212_p2 = (trunc_ln1224_fu_204_p1 ^ 8'd128);

assign xor_ln1225_fu_250_p2 = (trunc_ln1225_fu_242_p1 ^ 8'd128);

assign xor_ln1227_fu_476_p2 = (icmp_ln1227_fu_125_p2 ^ 1'd1);

assign zext_ln1223_fu_157_p1 = trunc_ln1223_reg_620;

assign zext_ln1224_fu_161_p1 = add_ln1224_reg_626;

assign zext_ln1225_fu_170_p1 = add_ln1225_reg_641;

assign zext_ln1237_1_fu_238_p1 = select_ln1224_fu_226_p3;

assign zext_ln1237_2_fu_272_p1 = select_ln1225_fu_264_p3;

assign zext_ln1237_fu_234_p1 = select_ln1223_fu_196_p3;

assign zext_ln1238_1_fu_307_p1 = $unsigned(add_ln1238_1_reg_725);

assign zext_ln1238_fu_303_p1 = shl_ln_fu_296_p3;

assign zext_ln1239_fu_333_p1 = shl_ln1_fu_326_p3;

always @ (posedge ap_clk) begin
    zext_ln1237_reg_680[14:8] <= 7'b0000000;
    zext_ln1237_1_reg_686[15:8] <= 8'b00000000;
    zext_ln1237_1_reg_686_pp0_iter4_reg[15:8] <= 8'b00000000;
    zext_ln1237_2_reg_699[13:8] <= 6'b000000;
end

endmodule //design_1_v_tpg_0_0_tpgPatternRainbow
